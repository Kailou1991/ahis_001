# Generated by Django 5.1.7 on 2025-04-18 16:35

import django.db.models.deletion
import multiselectfield.db.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("Commune", "0003_alter_commune_user"),
        ("Departement", "0003_alter_departement_user"),
        ("Espece", "0006_alter_espece_user"),
        ("Laboratoire", "0003_alter_laboratoire_user"),
        ("Maladie", "0006_alter_maladie_user"),
        ("Region", "0002_region_user"),
        ("TypeTestLabo", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Foyer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_rapportage", models.DateField()),
                ("localite", models.CharField(max_length=255)),
                (
                    "lieu_suspicion",
                    models.CharField(
                        choices=[
                            ("abattoir", "Abattoir"),
                            ("aire_abattage", "Aire d'abattage"),
                            ("ferme_clinique", "Troupeau/Ferme/Clinique"),
                        ],
                        default="ferme_clinique",
                        max_length=255,
                    ),
                ),
                (
                    "nom_lieu_suspicion",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("longitude", models.FloatField(blank=True, null=True)),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("effectif_troupeau", models.IntegerField(default=0)),
                ("nbre_sujets_malade", models.IntegerField(blank=True, null=True)),
                ("nbre_sujets_morts", models.IntegerField(blank=True, null=True)),
                (
                    "nbre_des_cas_de_morsure_humains",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "nbre_des_cas_de_morsure_animaux",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "mesure_controle",
                    multiselectfield.db.fields.MultiSelectField(
                        blank=True,
                        choices=[
                            ("abattage_sanitaire", "Abattage sanitaire"),
                            ("mise_a_mort_selective", "Mise à mort sélective"),
                            ("mise_en_quarantaine", "Mise en quarantaine"),
                            (
                                "vaccination_en_reponse",
                                "Vaccination en réponse au foyer",
                            ),
                            ("traitement", "Traitement curatif"),
                            ("desinfection", "Désinfection des locaux"),
                            ("desinsectisation", "Désinsectisation"),
                            ("deratisation", "Dératisation"),
                            (
                                "interdiction_mouvement",
                                "Interdiction des mouvements d’animaux",
                            ),
                            (
                                "limitation_acces_zone",
                                "Limitation d’accès à la zone infectée",
                            ),
                            ("sensibilisation_elevecs", "Sensibilisation des éleveurs"),
                            ("surveillance_renforcee", "Surveillance renforcée"),
                            ("controle_post_vaccination", "Contrôle post-vaccination"),
                            (
                                "elim_residus_contamines",
                                "Élimination des résidus contaminés",
                            ),
                            (
                                "fermeture_marche_animaux",
                                "Fermeture temporaire des marchés à bétail",
                            ),
                            ("autre", "Autre mesure (à préciser)"),
                        ],
                        max_length=310,
                        null=True,
                    ),
                ),
                ("nbre_sujets_traites", models.IntegerField(blank=True, null=True)),
                ("nbre_sujets_vaccines", models.IntegerField(blank=True, null=True)),
                (
                    "nbre_sujets_en_quarantaine",
                    models.IntegerField(blank=True, null=True),
                ),
                ("nbre_sujets_abattus", models.IntegerField(blank=True, null=True)),
                (
                    "vaccinations_recentes",
                    models.CharField(
                        choices=[("OUI", "Oui"), ("NON", "Non")],
                        default="NON",
                        max_length=3,
                    ),
                ),
                ("date_vaccination", models.DateField(blank=True, null=True)),
                (
                    "nature_prelevement",
                    models.CharField(
                        choices=[
                            ("ecouvillon_buccal", "Écouvillon buccal"),
                            ("ecouvillon_nasal", "Écouvillon nasal"),
                            ("ecouvillon_oculaire", "Écouvillon oculaire"),
                            ("ecouvillon_rectal", "Écouvillon rectal"),
                            ("ecouvillon_cloacal", "Écouvillon cloacal (volailles)"),
                            ("sang_total", "Sang total"),
                            ("serum", "Sérum"),
                            ("plasma", "Plasma"),
                            ("urine", "Urine"),
                            ("fèces", "Fèces"),
                            ("tissu_organe", "Tissu / Organe"),
                            ("ganglion", "Ganglion lymphatique"),
                            ("poumon", "Poumon"),
                            ("foie", "Foie"),
                            ("tete", "Tête"),
                            ("lba", "LBA (Lavage Broncho-Alvéolaire)"),
                            ("liquide_cephalo_rachidien", "Liquide céphalo-rachidien"),
                            ("lait", "Lait"),
                            ("contenu_digestif", "Contenu digestif"),
                            ("contenu_respiratoire", "Contenu respiratoire"),
                            ("os", "Os"),
                            ("peau", "Peau / Lésions cutanées"),
                            ("autre", "Autre (à préciser)"),
                        ]
                    ),
                ),
                ("nbre_echant_recu", models.IntegerField(blank=True, null=True)),
                ("nbre_echant_positif", models.IntegerField(blank=True, null=True)),
                (
                    "nbre_echant_inexploitable",
                    models.IntegerField(blank=True, null=True),
                ),
                ("nbre_echant_nonconforme", models.IntegerField(blank=True, null=True)),
                (
                    "prelevement_envoye",
                    models.CharField(
                        choices=[("OUI", "Oui"), ("NON", "Non")],
                        default="NON",
                        max_length=3,
                    ),
                ),
                (
                    "resultat_laboratoire",
                    models.CharField(
                        choices=[("OUI", "Oui"), ("NON", "Non")],
                        default="NON",
                        max_length=3,
                    ),
                ),
                ("date_envoi_prelevement", models.DateField(blank=True, null=True)),
                ("date_reception_prelevement", models.DateField(blank=True, null=True)),
                ("date_resultat", models.DateField(blank=True, null=True)),
                (
                    "service_labo",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("serologie", "Sérologie"),
                            ("bacteriologie", "Bactériologie"),
                            ("virologie", "Virologie"),
                            ("autre", "Autre"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("absence_reactifs", models.BooleanField(default=False)),
                ("resultats_labo", models.BooleanField(default=False)),
                ("recommandations_suivi", models.TextField(blank=True, null=True)),
                (
                    "fichier_resultat",
                    models.FileField(
                        blank=True, null=True, upload_to="resultats_labo/"
                    ),
                ),
                ("chiffre_kbt", models.BooleanField(default=False)),
                ("idkobo", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "commune",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Commune.commune",
                    ),
                ),
                (
                    "departement",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Departement.departement",
                    ),
                ),
                (
                    "espece",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="Espece.espece"
                    ),
                ),
                (
                    "laboratoire",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Laboratoire.laboratoire",
                    ),
                ),
                (
                    "maladie",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Maladie.maladie",
                    ),
                ),
                (
                    "maladie_vaccination",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="maladie_vaccination",
                        to="Maladie.maladie",
                    ),
                ),
                (
                    "region",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="Region.region"
                    ),
                ),
                (
                    "type_test_labo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="TypeTestLabo.typetestlabo",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
