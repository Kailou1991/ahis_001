# Generated by Django 5.2 on 2025-08-25 09:08

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Commune', '0003_alter_commune_user'),
        ('Departement', '0003_alter_departement_user'),
        ('Region', '0002_region_user'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('lims', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Emplacement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='GabaritRapport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=120)),
                ('slug', models.SlugField(unique=True)),
                ('template_path', models.CharField(help_text='Chemin template HTML (ou slug)', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('preventive', 'Préventive'), ('corrective', 'Corrective')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('realise_le', models.DateField(default=django.utils.timezone.now)),
                ('prochain_passage', models.DateField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-realise_le'],
            },
        ),
        migrations.CreateModel(
            name='PieceJointe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('fichier', models.FileField(upload_to='lims/pj/')),
                ('type', models.CharField(blank=True, max_length=50)),
                ('ajoute_le', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['-ajoute_le'],
            },
        ),
        migrations.CreateModel(
            name='StockageEchantillon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_entree', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_sortie', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-date_entree'],
            },
        ),
        migrations.CreateModel(
            name='TraceEchantillon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=50)),
                ('horodatage', models.DateTimeField(default=django.utils.timezone.now)),
                ('details', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['-horodatage'],
            },
        ),
        migrations.AddField(
            model_name='analyse',
            name='annulee',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='analyse',
            name='date_echeance',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='analyse',
            name='instrument',
            field=models.ForeignKey(blank=True, limit_choices_to={'type': 'instrument'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lims.equipement'),
        ),
        migrations.AddField(
            model_name='analyse',
            name='motif_annulation',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name='analyse',
            name='priorite',
            field=models.CharField(choices=[('normale', 'Normale'), ('urgente', 'Urgente')], db_index=True, default='normale', max_length=10),
        ),
        migrations.AddField(
            model_name='analyse',
            name='reprise_de',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lims.analyse'),
        ),
        migrations.AddField(
            model_name='analyse',
            name='valide_bio_le',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='analyse',
            name='valide_bio_par',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='analyses_validees_bio', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='analyse',
            name='valide_tech_le',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='analyse',
            name='valide_tech_par',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='analyses_validees_tech', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='demande',
            name='date_echeance',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='demande',
            name='priorite',
            field=models.CharField(choices=[('normale', 'Normale'), ('urgente', 'Urgente')], db_index=True, default='normale', max_length=10),
        ),
        migrations.AddField(
            model_name='echantillon',
            name='code_barres',
            field=models.CharField(blank=True, db_index=True, max_length=64),
        ),
        migrations.AddField(
            model_name='echantillon',
            name='date_destruction',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='echantillon',
            name='index_aliquote',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='echantillon',
            name='motif_destruction',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name='echantillon',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='aliquotes', to='lims.echantillon'),
        ),
        migrations.AddField(
            model_name='echantillon',
            name='statut_stock',
            field=models.CharField(choices=[('stocke', 'Stocké'), ('detruit', 'Détruit'), ('retourne', 'Retourné')], default='stocke', max_length=20),
        ),
        migrations.AddField(
            model_name='equipement',
            name='numero_serie',
            field=models.CharField(blank=True, max_length=80),
        ),
        migrations.AddField(
            model_name='equipement',
            name='type',
            field=models.CharField(choices=[('instrument', "Instrument d'analyse"), ('equipement', 'Équipement général')], default='equipement', max_length=20),
        ),
        migrations.AddField(
            model_name='rapport',
            name='destinaire_email',
            field=models.EmailField(blank=True, max_length=254),
        ),
        migrations.AddField(
            model_name='rapport',
            name='envoye_le',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddIndex(
            model_name='analyse',
            index=models.Index(fields=['priorite', 'date_echeance'], name='lims_analys_priorit_add6af_idx'),
        ),
        migrations.AddIndex(
            model_name='demande',
            index=models.Index(fields=['priorite', 'date_echeance'], name='lims_demand_priorit_4dda2c_idx'),
        ),
        migrations.AddField(
            model_name='rapport',
            name='gabarit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lims.gabaritrapport'),
        ),
        migrations.AddField(
            model_name='maintenance',
            name='equipement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenances', to='lims.equipement'),
        ),
        migrations.AddField(
            model_name='piecejointe',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='stockageechantillon',
            name='echantillon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lims.echantillon'),
        ),
        migrations.AddField(
            model_name='stockageechantillon',
            name='emplacement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lims.emplacement'),
        ),
        migrations.AddField(
            model_name='traceechantillon',
            name='acteur',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='traceechantillon',
            name='echantillon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='traces', to='lims.echantillon'),
        ),
    ]
