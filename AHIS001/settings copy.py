"""
Django settings for AHIS001 project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
TEMPLATES_DIR =os.path.join(BASE_DIR,'templates')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-u*rs5(zc#7e8li-)eqedxa2f2^bg0q*xuuq(*b+#5=rb%9aju)"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

#ALLOWED_HOSTS = ['localhost', '127.0.0.1', '0.0.0.0', '192.168.195.95']
ALLOWED_HOSTS = ["localhost", "127.0.0.1"]
#CSRF_TRUSTED_ORIGINS = ["https://*.trycloudflare.com"]




# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django_extensions",

    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'django.contrib.humanize',
    'rest_framework',
    'multiselectfield',
    'crispy_forms',
    'crispy_bootstrap4',
    "Region",
    "Commune",
    "Departement",
    "Maladie",
    "Espece",
    "Effectif",
    "Année",
    "Pays",
    "Laboratoire",
    "TypeTestLabo",
    "Foyer",
    "Partenaire",
    "DeplacementAnimaux",
    "Infrastructure",
    "Document",
    "Structure",
    "Personnel",
   "Campagne",
   "data_initialization",
   "userProfile",
   "produit",
   "gestion_resources",
   "gestion_absences",
   "gestion_documents",
   "seroPPR",
   "actes_admin",
   "localisation_api",
   "sante_publique",
   "integration_kobo",
   "inspection_medicaments",
   "aibd"  ,
   "visa_importation",
   "materiel",
   "alerts",
   "paramiko",
   'celery',
    'kobo_integration',
    'generated_apps',   # app agrégatrice des modules générés
    'core_menu',
    'parametre',
    'simple_history',
    'lims',
    
    
  
   
]


## nouveau

BASE_DIR = Path(__file__).resolve().parent.parent
KOBOTOOLBOX_BASE_URL = "https://form.santeanimalechad.org"  # ou ton URL self-hosted
KOBOTOOLBOX_TOKEN = "ca66b0aee999b72c3a820b7e294268aa7785b05c"                  # Token de l'utilisateur
KOBOTOOLBOX_VERIFY_SSL = False                        # False si self-hosted avec cert non public
KOBOTOOLBOX_PAGE_SIZE = 500                         # batch de pagination
# Authentification par identifiants Kobo
KOBOTOOLBOX_USERNAME = "super_admin"
KOBOTOOLBOX_PASSWORD = "11aout1960"

DYNAMIC_APPS_DIR = BASE_DIR / "kobo_dynamic_apps"


## fin
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap4"
CRISPY_TEMPLATE_PACK = "bootstrap4"

#koko
# Exemple pour KoboToolbox serveur officiel


MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "data_initialization.middleware.CurrentUserMiddleware",
    "simple_history.middleware.HistoryRequestMiddleware",
    
]

ROOT_URLCONF = "AHIS001.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / 'templates']
        ,
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "AHIS001.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'AHIS_DB',
        'USER': 'postgres',
        'PASSWORD': 'Mounkaila@1991',
        'HOST': 'localhost',
        'PORT': '5433',
    }
}



# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "fr"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True
DATE_INPUT_FORMATS = ['%d/%m/%Y']


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "static/"
STATICFILES_DIRS=[
    os.path.join(BASE_DIR,'static/')


]

# Ajoutez ces lignes pour configurer MEDIA_URL et MEDIA_ROOT
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        #'rest_framework.permissions.IsAuthenticated',
        'rest_framework.permissions.AllowAny',
    ],
}

###mail de reinitialisation pass

# settings.py
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'ssl0.ovh.net'
EMAIL_PORT = 465
EMAIL_USE_SSL = True  # Pour OVH avec SSL sur port 465
EMAIL_HOST_USER = 'dnsv@koboserveur.net'
EMAIL_HOST_PASSWORD = 'Mounkaila@1991'
DEFAULT_FROM_EMAIL = 'dnsv@koboserveur.net'
###Nouveau paramettre pour les alertes sur le rapport hebdo
CAMVAC_ALERT_RECIPIENTS = ["g.kailou@woah.org"]

# Seuils optionnels pour colorer en rouge (< seuil) et vert (≥ seuil)
CAMVAC_ALERT_THRESHOLDS = {
    "real": 40,  # Réalisation ≥ 80%
    "couv": 50,  # Couverture ≥ 60%
    "app":  60,  # Approvisionnement ≥ 90%
}

###Authentification
# settings.py
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'
LOGIN_URL = '/'

# Durée de vie de la session en secondes (ici, 2 semaines)
SESSION_COOKIE_AGE = 1209600  # 2 semaines

# Si True, la session expirera à la fermeture du navigateur
SESSION_EXPIRE_AT_BROWSER_CLOSE = False  # La session persiste après la fermeture du navigateur

# Si True, la session est sauvegardée à chaque requête, prolongeant ainsi sa durée de vie
SESSION_SAVE_EVERY_REQUEST = True  # Sauvegarder la session à chaque requête
# Ajout dynamique du context processor (alternative)

#######Nouveau
from celery.schedules import crontab

CELERY_BEAT_SCHEDULE = {
    "sync-kobo-every-30min": {
        "task": "kobo_integration.tasks.sync_all_kobo_data_task",
        "schedule": crontab(minute="*/30"),  # toutes les 30 minutes
        "kwargs": {"use_since": True, "overlap_minutes": 5, "limit": None},
    },
}

CELERY_BROKER_URL = 'redis://127.0.0.1:6379/0'
CELERY_RESULT_BACKEND = 'redis://127.0.0.1:6379/1'
CELERY_TASK_ALWAYS_EAGER = True  # True en DEV si tu veux sans worker

TEMPLATES[0]['OPTIONS']['context_processors'] += [
    'core_menu.context_processors.menu',
]

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'


INSTALLED_APPS += ['django.contrib.postgres']



#####a enlever en production

# settings.py
# Limite par sécurité : augmente-la à une valeur adaptée à ton usage
DATA_UPLOAD_MAX_NUMBER_FIELDS = 100_000      # ex. 100k
DATA_UPLOAD_MAX_NUMBER_FILES  = 10_000       # (optionnel, si besoin)


# auto-added by AHIS generator
INSTALLED_APPS += ['generated_apps.vaccination_sn']


# auto-added by AHIS generator
INSTALLED_APPS += ['generated_apps.objectif_sn']

# auto-added by AHIS generator
INSTALLED_APPS += ['generated_apps.surveillance_sn']

REST_FRAMEWORK = {
"DEFAULT_PERMISSION_CLASSES": [
"rest_framework.permissions.IsAuthenticated",
],
"DEFAULT_FILTER_BACKENDS": [
"django_filters.rest_framework.DjangoFilterBackend",
"rest_framework.filters.SearchFilter",
"rest_framework.filters.OrderingFilter",
],
"DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
"PAGE_SIZE": 20,
}


MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"


# (optionnel) endpoints d'intégration AHIS
AHIS_RESULTS_ENDPOINT = None
AHIS_API_TOKEN = None
