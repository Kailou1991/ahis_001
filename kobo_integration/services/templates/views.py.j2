{% autoescape off %}
from django.contrib.auth.mixins import LoginRequiredMixin, PermissionRequiredMixin
from django.urls import reverse_lazy
from django.views.generic import ListView, CreateView, UpdateView, DeleteView, TemplateView

from .models import {{ model_name }}
from .forms import {{ form_class_name }}
from .dashboard import get_kpis
from .exports import export_csv

APP_LABEL = '{{ app_slug }}'
MODEL_PERM = '{{ model_name|lower }}'
ACCESS_PERM = '{{ app_slug }}.access_{{ app_slug }}'

class {{ model_name }}List(LoginRequiredMixin, PermissionRequiredMixin, ListView):
    permission_required = ACCESS_PERM
    model = {{ model_name }}
    template_name = '{{ app_slug }}/list.html'

class {{ model_name }}Create(LoginRequiredMixin, PermissionRequiredMixin, CreateView):
    permission_required = f'{APP_LABEL}.add_{MODEL_PERM}'
    model = {{ model_name }}
    form_class = {{ form_class_name }}
    template_name = '{{ app_slug }}/form.html'
    success_url = reverse_lazy('{{ app_slug }}:list')

class {{ model_name }}Update(LoginRequiredMixin, PermissionRequiredMixin, UpdateView):
    permission_required = f'{APP_LABEL}.change_{MODEL_PERM}'
    model = {{ model_name }}
    form_class = {{ form_class_name }}
    template_name = '{{ app_slug }}/form.html'
    success_url = reverse_lazy('{{ app_slug }}:list')

class {{ model_name }}Delete(LoginRequiredMixin, PermissionRequiredMixin, DeleteView):
    permission_required = f'{APP_LABEL}.delete_{MODEL_PERM}'
    model = {{ model_name }}
    success_url = reverse_lazy('{{ app_slug }}:list')

class {{ model_name }}Dashboard(LoginRequiredMixin, PermissionRequiredMixin, TemplateView):
    permission_required = ACCESS_PERM
    template_name = '{{ app_slug }}/dashboard.html'
    def get_context_data(self, **kwargs):
        ctx = super().get_context_data(**kwargs)
        ctx.update(get_kpis({{ model_name }}))
        return ctx

class {{ model_name }}Export(LoginRequiredMixin, PermissionRequiredMixin, TemplateView):
    permission_required = ACCESS_PERM
    def get(self, request, *args, **kwargs):
        qs = {{ model_name }}.objects.all()
        return export_csv(qs)
{% endautoescape %}
